pipeline {
    agent any
    
    environment {
        JAVA_HOME = '/usr/lib/jvm/java-21-amazon-corretto'
        PATH = "/opt/maven/bin:$JAVA_HOME/bin:$PATH"
        
        // Nexus Configuration (Update these values)
        NEXUS_VERSION = "nexus3"
        NEXUS_PROTOCOL = "http"
        NEXUS_URL = "http://52.90.103.249:8081"  // Your Nexus Docker container URL
        NEXUS_REPOSITORY = "maven-releases"
        NEXUS_CREDENTIAL_ID = "nexus-credentials"  // Jenkins credential ID
        
        // OWASP Docker Configuration
        OWASP_DC_DOCKER_IMAGE = "owasp/dependency-check:latest"
    }
    
    options {
        skipStagesAfterUnstable()
    }
    
    stages {
        stage('Checkout') {
            steps {
                git branch: 'master',
                    url: 'https://github.com/skillupwithsachin/simple-java-maven-app.git'
            }
        }
        
        stage('Build') {
            steps {
                sh 'mvn -B -DskipTests clean package'
            }
        }
        
        stage('Test') {
            steps {
                sh 'mvn test'
            }
            post {
                always {
                    junit 'target/surefire-reports/*.xml'
                }
            }
        }
        
        stage('Upload to Nexus') {
            steps {
                script {
                    // Read POM version
                    def pom = readMavenPom file: 'pom.xml'
                    def artifactId = pom.artifactId
                    def version = pom.version
                    def groupId = pom.groupId
                    def packaging = pom.packaging ?: 'jar'
                    
                    // Determine repository based on version (SNAPSHOT vs RELEASE)
                    def nexusRepo = version.endsWith('-SNAPSHOT') ? 'maven-snapshots' : 'maven-releases'
                    
                    // Find the artifact
                    def artifactPath = "target/${artifactId}-${version}.${packaging}"
                    
                    echo "Uploading ${artifactId}-${version}.${packaging} to ${nexusRepo}"
                    
                    
                    // Upload to Nexus
                    nexusArtifactUploader(
                        nexusVersion: NEXUS_VERSION,
                        protocol: NEXUS_PROTOCOL,
                        nexusUrl: NEXUS_URL,
                        groupId: groupId,
                        version: version,
                        repository: NEXUS_REPOSITORY,
                        credentialsId: NEXUS_CREDENTIAL_ID,
                        artifacts: [
                            [
                                artifactId: artifactId,
                                classifier: '',
                                file: artifactPath,
                                type: packaging
                            ]
                        ]
                    )
                }
            }
        }
        
        stage('Deliver') { 
            steps {
                sh './jenkins/scripts/deliver.sh' 
            }
        }
    }
    
    post {
        success {
            echo 'Pipeline completed successfully!'
        }
        failure {
            echo 'Pipeline failed. Check the logs for details.'
        }
        always {
            // Clean up OWASP reports directory (optional)
            sh 'rm -rf owasp-reports || true'
        }
    }
}